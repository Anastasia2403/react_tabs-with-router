{"version":3,"sources":["components/NavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","components/Tabs/Tabs.tsx","components/TabsPage/TabsPage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","name","className","isActive","classNames","NavBar","Tabs","React","memo","tabs","selectedTab","map","tab","id","title","TabsPage","tabId","useParams","useMemo","find","content","App","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"gQASaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OACTC,IACE,cAAe,CAAE,YAAaD,KAJpC,SAQGF,KChBQI,EAAS,kBACpB,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEF,GAAG,IACHC,KAAK,SAEP,cAAC,EAAD,CACED,GAAG,QACHC,KAAK,iBCLFK,EAAwBC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OAC9C,qBAAKR,UAAU,gBAAf,SACE,6BACGO,EAAKE,KAAI,SAACC,GAAD,OACR,oBAEE,UAAQ,MACRV,UAAWE,IAAW,CACpB,YAAaQ,EAAIC,MAAJ,OAAWH,QAAX,IAAWA,OAAX,EAAWA,EAAaG,MAJzC,SAOE,cAAC,IAAD,CAAMb,GAAE,aAAQY,EAAIC,IAAM,UAAQ,UAAlC,SACGD,EAAIE,SAPFF,EAAIC,cCNNE,EAA4B,SAAC,GAAc,IAAZN,EAAW,EAAXA,KAClCO,EAAUC,cAAVD,MACFN,EAAcQ,mBAAQ,WAC1B,OAAOT,EAAKU,MAAK,SAACP,GAAD,OAASA,EAAIC,KAAOG,MAAU,OAC9C,CAACP,EAAMO,IAEV,OACE,qCACE,oBAAId,UAAU,QAAd,uBACA,cAACI,EAAD,CAAMG,KAAMA,EAAMC,YAAaA,IAC/B,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,UACc,OAAXQ,QAAW,IAAXA,OAAA,EAAAA,EAAaU,UAAW,4BCb3BX,EAAO,CACX,CAAEI,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,eACxC,CAAEP,GAAI,QAASC,MAAO,QAASM,QAAS,gBAG7BC,EAAM,kBACjB,qCACE,cAAC,EAAD,IACA,qBAAKnB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,oBAAIrB,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,oBAAIrB,UAAU,QAAd,8BACzB,eAAC,IAAD,CAAOoB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUd,KAAMA,MACtC,cAAC,IAAD,CAAOa,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUd,KAAMA,SAEhD,cAAC,IAAD,CAAOa,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUvB,GAAG,IAAIyB,SAAO,iBCrB/DC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57391fc4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  name: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, name }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames(\n        'navbar-item', { 'is-active': isActive },\n      )\n    )}\n  >\n    {name}\n  </NavLink>\n);\n","import { PageNavLink } from '../NavLink/PageNavLink';\n\nexport const NavBar = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          name=\"Home\"\n        />\n        <PageNavLink\n          to=\"/tabs\"\n          name=\"Tabs\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTab: Tab | null;\n}\n\nexport const Tabs: React.FC<Props> = React.memo(({ tabs, selectedTab }) => (\n  <div className=\"tabs is-boxed\">\n    <ul>\n      {tabs.map((tab) => (\n        <li\n          key={tab.id}\n          data-cy=\"Tab\"\n          className={classNames({\n            'is-active': tab.id === selectedTab?.id,\n          })}\n        >\n          <Link to={`../${tab.id}`} data-cy=\"TabLink\">\n            {tab.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n));\n","import { useParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { Tabs } from '../Tabs/Tabs';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n}\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n  const selectedTab = useMemo(() => {\n    return tabs.find((tab) => tab.id === tabId) || null;\n  }, [tabs, tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs tabs={tabs} selectedTab={selectedTab} />\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content || 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { TabsPage } from './components/TabsPage/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    <NavBar />\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage tabs={tabs} />} />\n            <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}